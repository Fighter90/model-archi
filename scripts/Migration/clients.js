/**
 * @name Generate Migration Integrated View - Fitness Club v8.0
 * @description –û–î–ù–ê Integrated View —Å 4 —Å–ª–æ—è–º–∏ (Business/Application/Technology/Migration)
 * @version 8.0 ‚Äî Migration Layer –≤–Ω–∏–∑—É, –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–≤—è–∑–∞–Ω—ã
 * @author Claude AI Assistant
 * @lastModifiedDate 2025-10-26
 * @archimateVersion 3.2
 * @archiVersion 5.x
 */

console.clear();
console.show();

function logConsole(message, data) {
    const timestamp = new Date().toISOString();
    console.log(`[${timestamp}] ${message}`);
    if (data) {
        console.log(JSON.stringify(data, null, 2));
    }
}

logConsole("=== Migration Integrated View Generator v8.0 ===");

// ============================================================
// –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
// ============================================================
const ANTHROPIC_API_KEY = ""; // ‚Üê –í–°–¢–ê–í–¨–¢–ï API KEY
const ANTHROPIC_MODEL = "claude-sonnet-4-20250514";
const ANTHROPIC_BASE_URL = "https://api.anthropic.com";
const ANTHROPIC_API_VERSION = "2023-06-01";
const API_TIMEOUT = 360000;
const MAX_TOKENS = 24000;
const MAX_RETRIES = 2;

// ============================================================
// –¶–í–ï–¢–û–í–ê–Ø –ö–û–î–ò–†–û–í–ö–ê –ü–û –°–õ–û–Ø–ú ARCHIMATE
// ============================================================
const LAYER_COLORS = {
    // Business Layer
    "business-actor": "#FFFFB3",
    "business-role": "#FFFFB3",
    "business-collaboration": "#FFFFB3",
    "business-interface": "#FFFFB3",
    "business-process": "#FFFFB3",
    "business-function": "#FFFFB3",
    "business-interaction": "#FFFFB3",
    "business-event": "#FFFFB3",
    "business-service": "#FFFFB3",
    "business-object": "#FFFFB3",
    "contract": "#FFFFB3",
    "representation": "#FFFFB3",
    "product": "#FFFFB3",
    
    // Application Layer
    "application-component": "#C0FFFF",
    "application-collaboration": "#C0FFFF",
    "application-interface": "#C0FFFF",
    "application-function": "#C0FFFF",
    "application-interaction": "#C0FFFF",
    "application-process": "#C0FFFF",
    "application-event": "#C0FFFF",
    "application-service": "#C0FFFF",
    "data-object": "#C0FFFF",
    
    // Technology Layer
    "node": "#D6EEC3",
    "device": "#D6EEC3",
    "system-software": "#D6EEC3",
    "technology-collaboration": "#D6EEC3",
    "technology-interface": "#D6EEC3",
    "path": "#D6EEC3",
    "communication-network": "#D6EEC3",
    "technology-function": "#D6EEC3",
    "technology-process": "#D6EEC3",
    "technology-interaction": "#D6EEC3",
    "technology-event": "#D6EEC3",
    "technology-service": "#D6EEC3",
    "artifact": "#D6EEC3",
    
    // Implementation & Migration (4-–π —Å–ª–æ–π –≤–Ω–∏–∑—É)
    "work-package": "#FFE4B5",
    "deliverable": "#E0FFE0",
    "implementation-event": "#FFE0F0",
    "plateau": "#F0F0F0",
    "gap": "#FFD0D0",
    
    // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
    "grouping": "#F5F5F5",
    "location": "#F5F5F5"
};

// Layout config –¥–ª—è 4 —Å–ª–æ—ë–≤
const LAYOUT_CONFIG = {
    MARGIN_LEFT: 50,
    MARGIN_TOP: 50,
    AREA_WIDTH: 800,
    AREA_GAP: 100,
    LAYER_HEIGHT: 180,      // –í—ã—Å–æ—Ç–∞ —Å–ª–æ—è (—É–º–µ–Ω—å—à–µ–Ω–∞ –¥–ª—è 4 —Å–ª–æ—ë–≤)
    LAYER_GAP: 30,
    ELEMENT_WIDTH: 160,
    ELEMENT_HEIGHT: 60,
    ELEMENTS_PER_ROW: 4
};

// ============================================================
// –ü–û–õ–£–ß–ï–ù–ò–ï –ú–û–î–ï–õ–ò
// ============================================================
function getTargetModel() {
    try {
        if (typeof model !== 'undefined' && model) {
            logConsole(`‚úì Found model: ${model.name}`);
            return model;
        }
        
        const models = $("archimate-model");
        if (models && models.size() > 0) {
            const foundModel = models.first();
            logConsole(`‚úì Found model via $(): ${foundModel.name}`);
            return foundModel;
        }
        
        throw new Error("No ArchiMate model found!");
    } catch (e) {
        logConsole(`‚úó getTargetModel error: ${e.message}`);
        throw e;
    }
}

// ============================================================
// HTTP CLIENT
// ============================================================
function callAnthropicAPI(prompt) {
    try {
        const HttpClient = Java.type("java.net.http.HttpClient");
        const HttpRequest = Java.type("java.net.http.HttpRequest");
        const HttpResponse = Java.type("java.net.http.HttpResponse");
        const URI = Java.type("java.net.URI");
        const Duration = Java.type("java.time.Duration");
        
        const requestBody = JSON.stringify({
            model: ANTHROPIC_MODEL,
            max_tokens: MAX_TOKENS,
            temperature: 0.3,
            messages: [{ role: "user", content: prompt }]
        });
        
        const request = HttpRequest.newBuilder()
            .uri(URI.create(ANTHROPIC_BASE_URL + "/v1/messages"))
            .header("Content-Type", "application/json")
            .header("x-api-key", ANTHROPIC_API_KEY)
            .header("anthropic-version", ANTHROPIC_API_VERSION)
            .timeout(Duration.ofMillis(API_TIMEOUT))
            .POST(HttpRequest.BodyPublishers.ofString(requestBody))
            .build();
        
        const client = HttpClient.newBuilder()
            .connectTimeout(Duration.ofMillis(API_TIMEOUT))
            .build();
        
        const response = client.send(request, HttpResponse.BodyHandlers.ofString());
        
        if (response.statusCode() !== 200) {
            throw new Error(`API returned ${response.statusCode()}: ${response.body()}`);
        }
        
        const jsonResponse = JSON.parse(response.body());
        return jsonResponse.content[0].text;
        
    } catch (e) {
        logConsole(`‚úó API call failed: ${e.message}`);
        throw e;
    }
}

// ============================================================
// –ü–†–û–ú–ü–¢ –î–õ–Ø 4-–°–õ–û–ô–ù–û–ô VIEW (~50 –≠–õ–ï–ú–ï–ù–¢–û–í)
// ============================================================
const MIGRATION_INTEGRATED_PROMPT = `–¢—ã ‚Äî senior –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä, —ç–∫—Å–ø–µ—Ä—Ç –ø–æ ArchiMate 3.2 Implementation & Migration Layer.

–ó–ê–î–ê–ß–ê: –°–æ–∑–¥–∞—Ç—å –û–î–ù–£ –∫–æ–º–ø–∞–∫—Ç–Ω—É—é Integrated Migration View –¥–ª—è —Ñ–∏—Ç–Ω–µ—Å-–∫–ª—É–±–∞ —Å 3 –¥–æ–º–µ–Ω–∞–º–∏: –ó–∞–ø–∏—Å—å, –•—Ä–∞–Ω–µ–Ω–∏–µ, –û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å.

## –ö–û–ù–¢–ï–ö–°–¢:
- –¶–∏—Ñ—Ä–æ–≤–∞—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è: 12 –º–µ—Å—è—Ü–µ–≤, –±—é–¥–∂–µ—Ç 5 –º–ª–Ω —Ä—É–±
- AS-IS: —Ç–µ–ª–µ—Ñ–æ–Ω—ã, –±—É–º–∞–∂–Ω—ã–µ –∂—É—Ä–Ω–∞–ª—ã, Excel
- TO-BE: –æ–Ω–ª–∞–π–Ω-–∑–∞–ø–∏—Å—å, –æ–±–ª–∞—á–Ω–∞—è CRM, BI-–∞–Ω–∞–ª–∏—Ç–∏–∫–∞

## –¢–†–ï–ë–û–í–ê–ù–ò–Ø:
‚úÖ **~50 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ò–¢–û–ì–û** (–∫–æ–º–ø–∞–∫—Ç–Ω–æ)
‚úÖ **70-100 —Å–≤—è–∑–µ–π** (–≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–≤—è–∑–∞–Ω—ã)
‚úÖ **4 —Å–ª–æ—è**: Business ‚Üí Application ‚Üí Technology ‚Üí **Migration**
‚úÖ **3 –¥–æ–º–µ–Ω–∞**: –ó–∞–ø–∏—Å—å, –•—Ä–∞–Ω–µ–Ω–∏–µ, –û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å (–≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ)

## –°–¢–†–£–ö–¢–£–†–ê –ü–û –î–û–ú–ï–ù–ê–ú (–ö–û–ú–ü–ê–ö–¢–ù–û ‚Äî –ø–æ 4 —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–∞ —Å–ª–æ–π):

### üìå –î–û–ú–ï–ù 1: –ó–ê–ü–ò–°–¨ (Booking)

**Business Layer (4 —ç–ª–µ–º–µ–Ω—Ç–∞):**
- Actor (1): –ö–ª–∏–µ–Ω—Ç
- Process (2): –ó–∞–ø–∏—Å—å –∫–ª–∏–µ–Ω—Ç–∞ (AS-IS), –û–Ω–ª–∞–π–Ω-–∑–∞–ø–∏—Å—å (TO-BE)
- Object (1): –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ

**Application Layer (4 —ç–ª–µ–º–µ–Ω—Ç–∞):**
- Component (2): Excel (AS-IS), Mobile App (TO-BE)
- Service (1): Booking API (TO-BE)
- Function (1): Check Availability

**Technology Layer (4 —ç–ª–µ–º–µ–Ω—Ç–∞):**
- Node (2): Admin PC (AS-IS), AWS EC2 (TO-BE)
- Device (1): –°–º–∞—Ä—Ç—Ñ–æ–Ω (TO-BE)
- Service (1): Cloud Hosting (TO-BE)

**Migration Layer (4 —ç–ª–µ–º–µ–Ω—Ç–∞):**
- Plateau (2): AS-IS Plateau (–ó–∞–ø–∏—Å—å), TO-BE Plateau (–ó–∞–ø–∏—Å—å)
- Work Package (1): WP1: –ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (3 –º–µ—Å, 1.5M)
- Gap (1): –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ä–∞–∑—Ä—ã–≤ (–±—É–º–∞–≥–∞ ‚Üí –º–æ–±–∏–ª—å–Ω–æ–µ)

---

### üìå –î–û–ú–ï–ù 2: –•–†–ê–ù–ï–ù–ò–ï (Storage)

**Business Layer (4 —ç–ª–µ–º–µ–Ω—Ç–∞):**
- Actor (1): –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ë–î
- Process (2): –•—Ä–∞–Ω–µ–Ω–∏–µ –≤ —à–∫–∞—Ñ—É (AS-IS), –•—Ä–∞–Ω–µ–Ω–∏–µ –≤ –æ–±–ª–∞–∫–µ (TO-BE)
- Object (1): –ë–∞–∑–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤

**Application Layer (4 —ç–ª–µ–º–µ–Ω—Ç–∞):**
- Component (2): Access DB (AS-IS), PostgreSQL (TO-BE)
- Service (1): Data API (TO-BE)
- Function (1): CRUD Operations

**Technology Layer (4 —ç–ª–µ–º–µ–Ω—Ç–∞):**
- Node (2): –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä (AS-IS), AWS RDS (TO-BE)
- Device (1): –ü–ª–∞–Ω—à–µ—Ç (TO-BE)
- Service (1): AWS S3 Backup (TO-BE)

**Migration Layer (4 —ç–ª–µ–º–µ–Ω—Ç–∞):**
- Plateau (2): AS-IS Plateau (–•—Ä–∞–Ω–µ–Ω–∏–µ), TO-BE Plateau (–•—Ä–∞–Ω–µ–Ω–∏–µ)
- Work Package (1): WP2: Cloud CRM (2 –º–µ—Å, 800k)
- Deliverable (1): CRM-—Å–∏—Å—Ç–µ–º–∞

---

### üìå –î–û–ú–ï–ù 3: –û–¢–ß–Å–¢–ù–û–°–¢–¨ (Reporting)

**Business Layer (4 —ç–ª–µ–º–µ–Ω—Ç–∞):**
- Actor (1): –î–∏—Ä–µ–∫—Ç–æ—Ä
- Process (2): –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á—ë—Ç–∞ (AS-IS), –ê–≤—Ç–æ–æ—Ç—á—ë—Ç—ã (TO-BE)
- Object (1): Excel-–æ—Ç—á—ë—Ç

**Application Layer (4 —ç–ª–µ–º–µ–Ω—Ç–∞):**
- Component (2): Excel Pivot (AS-IS), Power BI (TO-BE)
- Service (1): Analytics API (TO-BE)
- Function (1): Generate Dashboard

**Technology Layer (4 —ç–ª–µ–º–µ–Ω—Ç–∞):**
- Node (2): –ü–ö –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞ (AS-IS), Azure VM (TO-BE)
- Device (1): 4K-–º–æ–Ω–∏—Ç–æ—Ä (TO-BE)
- Service (1): Azure Cloud (TO-BE)

**Migration Layer (4 —ç–ª–µ–º–µ–Ω—Ç–∞):**
- Plateau (2): AS-IS Plateau (–û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å), TO-BE Plateau (–û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å)
- Work Package (1): WP3: BI-–¥–∞—à–±–æ—Ä–¥—ã (2 –º–µ—Å, 700k)
- Gap (1): –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ä–∞–∑—Ä—ã–≤ (—Ä—É—á–Ω—ã–µ –æ—Ç—á—ë—Ç—ã ‚Üí BI)

---

## –°–í–Ø–ó–ò (–í–°–ï –≠–õ–ï–ú–ï–ù–¢–´ –°–í–Ø–ó–ê–ù–´):

### –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ —Å–≤—è–∑–∏ (–º–µ–∂–¥—É —Å–ª–æ—è–º–∏ –≤ –æ–¥–Ω–æ–º –¥–æ–º–µ–Ω–µ):
1. **Business ‚Üí Application**: Process ‚Üí Component (serving-relationship)
2. **Application ‚Üí Technology**: Component ‚Üí Node (assignment-relationship)
3. **Technology ‚Üí Migration**: Node ‚Üí Work Package (association-relationship "—Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è")
4. **Migration ‚Üí Migration**: Plateau AS-IS ‚Üí Gap ‚Üí Work Package ‚Üí Plateau TO-BE (flow-relationship)

### –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ —Å–≤—è–∑–∏ (–º–µ–∂–¥—É –¥–æ–º–µ–Ω–∞–º–∏):
1. –ó–∞–ø–∏—Å—å.Object ‚Üí –•—Ä–∞–Ω–µ–Ω–∏–µ.Component (flow-relationship "–ø–µ—Ä–µ–¥–∞—ë—Ç –¥–∞–Ω–Ω—ã–µ")
2. –•—Ä–∞–Ω–µ–Ω–∏–µ.Component ‚Üí –û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å.Component (flow-relationship "–∏—Å—Ç–æ—á–Ω–∏–∫ –¥–ª—è –æ—Ç—á—ë—Ç–æ–≤")
3. –ó–∞–ø–∏—Å—å.Work Package ‚Üí –•—Ä–∞–Ω–µ–Ω–∏–µ.Work Package (triggering-relationship "–ø—Ä–µ–¥—à–µ—Å—Ç–≤—É–µ—Ç")
4. –•—Ä–∞–Ω–µ–Ω–∏–µ.Work Package ‚Üí –û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å.Work Package (triggering-relationship "–ø—Ä–µ–¥—à–µ—Å—Ç–≤—É–µ—Ç")

---

## –§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê: JSON

{
  "description": "Implementation & Migration Integrated View: Fitness Club (4 —Å–ª–æ—è)",
  "areas": {
    "–ó–∞–ø–∏—Å—å": {
      "business": {
        "nodes": [
          {"id": "z_b_a1", "name": "–ö–ª–∏–µ–Ω—Ç", "type": "business-actor", "description": "", "properties": {"Area": "–ó–∞–ø–∏—Å—å", "Domain": "Business"}},
          {"id": "z_b_p1", "name": "–ó–∞–ø–∏—Å—å –∫–ª–∏–µ–Ω—Ç–∞ (AS-IS)", "type": "business-process", "description": "–†—É—á–Ω–∞—è", "properties": {"Area": "–ó–∞–ø–∏—Å—å", "Domain": "Business", "Phase": "AS-IS"}},
          {"id": "z_b_p2", "name": "–û–Ω–ª–∞–π–Ω-–∑–∞–ø–∏—Å—å (TO-BE)", "type": "business-process", "description": "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è", "properties": {"Area": "–ó–∞–ø–∏—Å—å", "Domain": "Business", "Phase": "TO-BE"}},
          {"id": "z_b_o1", "name": "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", "type": "business-object", "description": "", "properties": {"Area": "–ó–∞–ø–∏—Å—å", "Domain": "Business"}}
        ],
        "relationships": [
          {"source": "z_b_a1", "target": "z_b_p1", "type": "assignment-relationship", "name": "–≤—ã–ø–æ–ª–Ω—è–µ—Ç"}
        ]
      },
      "application": {
        "nodes": [
          {"id": "z_a_c1", "name": "Excel (AS-IS)", "type": "application-component", "description": "", "properties": {"Area": "–ó–∞–ø–∏—Å—å", "Domain": "Application", "Phase": "AS-IS"}},
          {"id": "z_a_c2", "name": "Mobile App (TO-BE)", "type": "application-component", "description": "", "properties": {"Area": "–ó–∞–ø–∏—Å—å", "Domain": "Application", "Phase": "TO-BE"}},
          {"id": "z_a_s1", "name": "Booking API", "type": "application-service", "description": "", "properties": {"Area": "–ó–∞–ø–∏—Å—å", "Domain": "Application", "Phase": "TO-BE"}},
          {"id": "z_a_f1", "name": "Check Availability", "type": "application-function", "description": "", "properties": {"Area": "–ó–∞–ø–∏—Å—å", "Domain": "Application", "Phase": "TO-BE"}}
        ],
        "relationships": [
          {"source": "z_a_c1", "target": "z_b_p1", "type": "serving-relationship", "name": "–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç"},
          {"source": "z_a_c2", "target": "z_b_p2", "type": "serving-relationship", "name": "–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç"}
        ]
      },
      "technology": {
        "nodes": [
          {"id": "z_t_n1", "name": "Admin PC (AS-IS)", "type": "node", "description": "", "properties": {"Area": "–ó–∞–ø–∏—Å—å", "Domain": "Technology", "Phase": "AS-IS"}},
          {"id": "z_t_n2", "name": "AWS EC2 (TO-BE)", "type": "node", "description": "", "properties": {"Area": "–ó–∞–ø–∏—Å—å", "Domain": "Technology", "Phase": "TO-BE"}},
          {"id": "z_t_d1", "name": "–°–º–∞—Ä—Ç—Ñ–æ–Ω (TO-BE)", "type": "device", "description": "", "properties": {"Area": "–ó–∞–ø–∏—Å—å", "Domain": "Technology", "Phase": "TO-BE"}},
          {"id": "z_t_s1", "name": "Cloud Hosting", "type": "technology-service", "description": "", "properties": {"Area": "–ó–∞–ø–∏—Å—å", "Domain": "Technology", "Phase": "TO-BE"}}
        ],
        "relationships": [
          {"source": "z_t_n1", "target": "z_a_c1", "type": "assignment-relationship", "name": "—Ä–∞–∑–º–µ—â–∞–µ—Ç"},
          {"source": "z_t_n2", "target": "z_a_c2", "type": "assignment-relationship", "name": "—Ä–∞–∑–º–µ—â–∞–µ—Ç"}
        ]
      },
      "migration": {
        "nodes": [
          {"id": "z_m_p1", "name": "AS-IS Plateau (–ó–∞–ø–∏—Å—å)", "type": "plateau", "description": "–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ", "properties": {"Area": "–ó–∞–ø–∏—Å—å", "Domain": "Migration", "Phase": "AS-IS"}},
          {"id": "z_m_p2", "name": "TO-BE Plateau (–ó–∞–ø–∏—Å—å)", "type": "plateau", "description": "–¶–µ–ª–µ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ", "properties": {"Area": "–ó–∞–ø–∏—Å—å", "Domain": "Migration", "Phase": "TO-BE"}},
          {"id": "z_m_wp1", "name": "WP1: –ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", "type": "work-package", "description": "3 –º–µ—Å, 1.5M", "properties": {"Area": "–ó–∞–ø–∏—Å—å", "Domain": "Migration", "Duration": "3", "Budget": "1500000"}},
          {"id": "z_m_g1", "name": "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ä–∞–∑—Ä—ã–≤", "type": "gap", "description": "–ë—É–º–∞–≥–∞ ‚Üí –º–æ–±–∏–ª—å–Ω–æ–µ", "properties": {"Area": "–ó–∞–ø–∏—Å—å", "Domain": "Migration"}}
        ],
        "relationships": [
          {"source": "z_m_p1", "target": "z_m_g1", "type": "association-relationship", "name": "–∏–º–µ–µ—Ç —Ä–∞–∑—Ä—ã–≤"},
          {"source": "z_m_g1", "target": "z_m_wp1", "type": "association-relationship", "name": "–ø—Ä–µ–æ–¥–æ–ª–µ–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑"},
          {"source": "z_m_wp1", "target": "z_m_p2", "type": "realization-relationship", "name": "—Ä–µ–∞–ª–∏–∑—É–µ—Ç"},
          {"source": "z_t_n2", "target": "z_m_wp1", "type": "association-relationship", "name": "—Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è –≤"}
        ]
      }
    },
    "–•—Ä–∞–Ω–µ–Ω–∏–µ": {
      "business": {
        "nodes": [
          {"id": "h_b_a1", "name": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ë–î", "type": "business-actor", "description": "", "properties": {"Area": "–•—Ä–∞–Ω–µ–Ω–∏–µ", "Domain": "Business"}},
          {"id": "h_b_p1", "name": "–•—Ä–∞–Ω–µ–Ω–∏–µ –≤ —à–∫–∞—Ñ—É (AS-IS)", "type": "business-process", "description": "–ë—É–º–∞–≥–∞", "properties": {"Area": "–•—Ä–∞–Ω–µ–Ω–∏–µ", "Domain": "Business", "Phase": "AS-IS"}},
          {"id": "h_b_p2", "name": "–•—Ä–∞–Ω–µ–Ω–∏–µ –≤ –æ–±–ª–∞–∫–µ (TO-BE)", "type": "business-process", "description": "Cloud", "properties": {"Area": "–•—Ä–∞–Ω–µ–Ω–∏–µ", "Domain": "Business", "Phase": "TO-BE"}},
          {"id": "h_b_o1", "name": "–ë–∞–∑–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤", "type": "business-object", "description": "", "properties": {"Area": "–•—Ä–∞–Ω–µ–Ω–∏–µ", "Domain": "Business"}}
        ],
        "relationships": [
          {"source": "h_b_a1", "target": "h_b_p1", "type": "assignment-relationship", "name": "–≤—ã–ø–æ–ª–Ω—è–µ—Ç"}
        ]
      },
      "application": {
        "nodes": [
          {"id": "h_a_c1", "name": "Access DB (AS-IS)", "type": "application-component", "description": "", "properties": {"Area": "–•—Ä–∞–Ω–µ–Ω–∏–µ", "Domain": "Application", "Phase": "AS-IS"}},
          {"id": "h_a_c2", "name": "PostgreSQL (TO-BE)", "type": "application-component", "description": "", "properties": {"Area": "–•—Ä–∞–Ω–µ–Ω–∏–µ", "Domain": "Application", "Phase": "TO-BE"}},
          {"id": "h_a_s1", "name": "Data API", "type": "application-service", "description": "", "properties": {"Area": "–•—Ä–∞–Ω–µ–Ω–∏–µ", "Domain": "Application", "Phase": "TO-BE"}},
          {"id": "h_a_f1", "name": "CRUD Operations", "type": "application-function", "description": "", "properties": {"Area": "–•—Ä–∞–Ω–µ–Ω–∏–µ", "Domain": "Application", "Phase": "TO-BE"}}
        ],
        "relationships": [
          {"source": "h_a_c1", "target": "h_b_p1", "type": "serving-relationship", "name": "–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç"},
          {"source": "h_a_c2", "target": "h_b_p2", "type": "serving-relationship", "name": "–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç"}
        ]
      },
      "technology": {
        "nodes": [
          {"id": "h_t_n1", "name": "–õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä (AS-IS)", "type": "node", "description": "", "properties": {"Area": "–•—Ä–∞–Ω–µ–Ω–∏–µ", "Domain": "Technology", "Phase": "AS-IS"}},
          {"id": "h_t_n2", "name": "AWS RDS (TO-BE)", "type": "node", "description": "", "properties": {"Area": "–•—Ä–∞–Ω–µ–Ω–∏–µ", "Domain": "Technology", "Phase": "TO-BE"}},
          {"id": "h_t_d1", "name": "–ü–ª–∞–Ω—à–µ—Ç (TO-BE)", "type": "device", "description": "", "properties": {"Area": "–•—Ä–∞–Ω–µ–Ω–∏–µ", "Domain": "Technology", "Phase": "TO-BE"}},
          {"id": "h_t_s1", "name": "AWS S3 Backup", "type": "technology-service", "description": "", "properties": {"Area": "–•—Ä–∞–Ω–µ–Ω–∏–µ", "Domain": "Technology", "Phase": "TO-BE"}}
        ],
        "relationships": [
          {"source": "h_t_n1", "target": "h_a_c1", "type": "assignment-relationship", "name": "—Ä–∞–∑–º–µ—â–∞–µ—Ç"},
          {"source": "h_t_n2", "target": "h_a_c2", "type": "assignment-relationship", "name": "—Ä–∞–∑–º–µ—â–∞–µ—Ç"}
        ]
      },
      "migration": {
        "nodes": [
          {"id": "h_m_p1", "name": "AS-IS Plateau (–•—Ä–∞–Ω–µ–Ω–∏–µ)", "type": "plateau", "description": "–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ", "properties": {"Area": "–•—Ä–∞–Ω–µ–Ω–∏–µ", "Domain": "Migration", "Phase": "AS-IS"}},
          {"id": "h_m_p2", "name": "TO-BE Plateau (–•—Ä–∞–Ω–µ–Ω–∏–µ)", "type": "plateau", "description": "–¶–µ–ª–µ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ", "properties": {"Area": "–•—Ä–∞–Ω–µ–Ω–∏–µ", "Domain": "Migration", "Phase": "TO-BE"}},
          {"id": "h_m_wp1", "name": "WP2: Cloud CRM", "type": "work-package", "description": "2 –º–µ—Å, 800k", "properties": {"Area": "–•—Ä–∞–Ω–µ–Ω–∏–µ", "Domain": "Migration", "Duration": "2", "Budget": "800000"}},
          {"id": "h_m_dl1", "name": "CRM-—Å–∏—Å—Ç–µ–º–∞", "type": "deliverable", "description": "", "properties": {"Area": "–•—Ä–∞–Ω–µ–Ω–∏–µ", "Domain": "Migration"}}
        ],
        "relationships": [
          {"source": "h_m_wp1", "target": "h_m_dl1", "type": "realization-relationship", "name": "—Å–æ–∑–¥–∞—ë—Ç"},
          {"source": "h_m_dl1", "target": "h_m_p2", "type": "realization-relationship", "name": "—Ä–µ–∞–ª–∏–∑—É–µ—Ç"}
        ]
      }
    },
    "–û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å": {
      "business": {
        "nodes": [
          {"id": "o_b_a1", "name": "–î–∏—Ä–µ–∫—Ç–æ—Ä", "type": "business-actor", "description": "", "properties": {"Area": "–û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å", "Domain": "Business"}},
          {"id": "o_b_p1", "name": "–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á—ë—Ç–∞ (AS-IS)", "type": "business-process", "description": "–í—Ä—É—á–Ω—É—é", "properties": {"Area": "–û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å", "Domain": "Business", "Phase": "AS-IS"}},
          {"id": "o_b_p2", "name": "–ê–≤—Ç–æ–æ—Ç—á—ë—Ç—ã (TO-BE)", "type": "business-process", "description": "BI-–¥–∞—à–±–æ—Ä–¥—ã", "properties": {"Area": "–û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å", "Domain": "Business", "Phase": "TO-BE"}},
          {"id": "o_b_o1", "name": "Excel-–æ—Ç—á—ë—Ç", "type": "business-object", "description": "", "properties": {"Area": "–û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å", "Domain": "Business"}}
        ],
        "relationships": [
          {"source": "o_b_a1", "target": "o_b_p1", "type": "assignment-relationship", "name": "–≤—ã–ø–æ–ª–Ω—è–µ—Ç"}
        ]
      },
      "application": {
        "nodes": [
          {"id": "o_a_c1", "name": "Excel Pivot (AS-IS)", "type": "application-component", "description": "", "properties": {"Area": "–û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å", "Domain": "Application", "Phase": "AS-IS"}},
          {"id": "o_a_c2", "name": "Power BI (TO-BE)", "type": "application-component", "description": "", "properties": {"Area": "–û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å", "Domain": "Application", "Phase": "TO-BE"}},
          {"id": "o_a_s1", "name": "Analytics API", "type": "application-service", "description": "", "properties": {"Area": "–û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å", "Domain": "Application", "Phase": "TO-BE"}},
          {"id": "o_a_f1", "name": "Generate Dashboard", "type": "application-function", "description": "", "properties": {"Area": "–û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å", "Domain": "Application", "Phase": "TO-BE"}}
        ],
        "relationships": [
          {"source": "o_a_c1", "target": "o_b_p1", "type": "serving-relationship", "name": "–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç"},
          {"source": "o_a_c2", "target": "o_b_p2", "type": "serving-relationship", "name": "–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç"}
        ]
      },
      "technology": {
        "nodes": [
          {"id": "o_t_n1", "name": "–ü–ö –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞ (AS-IS)", "type": "node", "description": "", "properties": {"Area": "–û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å", "Domain": "Technology", "Phase": "AS-IS"}},
          {"id": "o_t_n2", "name": "Azure VM (TO-BE)", "type": "node", "description": "", "properties": {"Area": "–û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å", "Domain": "Technology", "Phase": "TO-BE"}},
          {"id": "o_t_d1", "name": "4K-–º–æ–Ω–∏—Ç–æ—Ä (TO-BE)", "type": "device", "description": "", "properties": {"Area": "–û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å", "Domain": "Technology", "Phase": "TO-BE"}},
          {"id": "o_t_s1", "name": "Azure Cloud", "type": "technology-service", "description": "", "properties": {"Area": "–û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å", "Domain": "Technology", "Phase": "TO-BE"}}
        ],
        "relationships": [
          {"source": "o_t_n1", "target": "o_a_c1", "type": "assignment-relationship", "name": "—Ä–∞–∑–º–µ—â–∞–µ—Ç"},
          {"source": "o_t_n2", "target": "o_a_c2", "type": "assignment-relationship", "name": "—Ä–∞–∑–º–µ—â–∞–µ—Ç"}
        ]
      },
      "migration": {
        "nodes": [
          {"id": "o_m_p1", "name": "AS-IS Plateau (–û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å)", "type": "plateau", "description": "–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ", "properties": {"Area": "–û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å", "Domain": "Migration", "Phase": "AS-IS"}},
          {"id": "o_m_p2", "name": "TO-BE Plateau (–û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å)", "type": "plateau", "description": "–¶–µ–ª–µ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ", "properties": {"Area": "–û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å", "Domain": "Migration", "Phase": "TO-BE"}},
          {"id": "o_m_wp1", "name": "WP3: BI-–¥–∞—à–±–æ—Ä–¥—ã", "type": "work-package", "description": "2 –º–µ—Å, 700k", "properties": {"Area": "–û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å", "Domain": "Migration", "Duration": "2", "Budget": "700000"}},
          {"id": "o_m_g1", "name": "–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ä–∞–∑—Ä—ã–≤", "type": "gap", "description": "–†—É—á–Ω—ã–µ ‚Üí BI", "properties": {"Area": "–û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å", "Domain": "Migration"}}
        ],
        "relationships": [
          {"source": "o_m_p1", "target": "o_m_g1", "type": "association-relationship", "name": "–∏–º–µ–µ—Ç —Ä–∞–∑—Ä—ã–≤"},
          {"source": "o_m_g1", "target": "o_m_wp1", "type": "association-relationship", "name": "–ø—Ä–µ–æ–¥–æ–ª–µ–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑"}
        ]
      }
    }
  },
  "cross_area_relationships": [
    {"source": "z_b_o1", "target": "h_a_c2", "type": "flow-relationship", "name": "–ø–µ—Ä–µ–¥–∞—ë—Ç –¥–∞–Ω–Ω—ã–µ"},
    {"source": "h_a_c2", "target": "o_a_c2", "type": "flow-relationship", "name": "–∏—Å—Ç–æ—á–Ω–∏–∫ –¥–ª—è –æ—Ç—á—ë—Ç–æ–≤"},
    {"source": "z_m_wp1", "target": "h_m_wp1", "type": "triggering-relationship", "name": "–ø—Ä–µ–¥—à–µ—Å—Ç–≤—É–µ—Ç"},
    {"source": "h_m_wp1", "target": "o_m_wp1", "type": "triggering-relationship", "name": "–ø—Ä–µ–¥—à–µ—Å—Ç–≤—É–µ—Ç"}
  ]
}

‚ö†Ô∏è –í–ê–ñ–ù–û:
1. **~48 —ç–ª–µ–º–µ–Ω—Ç–æ–≤** (4 √ó 3 –æ–±–ª–∞—Å—Ç–µ–π √ó 4 —Å–ª–æ—è)
2. **70-100 —Å–≤—è–∑–µ–π** (–≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–≤—è–∑–∞–Ω—ã)
3. **4 —Å–ª–æ—è**: Business ‚Üí Application ‚Üí Technology ‚Üí **Migration (–≤–Ω–∏–∑—É)**
4. **ID-–ø—Ä–µ—Ñ–∏–∫—Å—ã**: \`z_\` (–ó–∞–ø–∏—Å—å), \`h_\` (–•—Ä–∞–Ω–µ–Ω–∏–µ), \`o_\` (–û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å), –¥–∞–ª–µ–µ \`b_\`/\`a_\`/\`t_\`/\`m_\` (—Å–ª–æ–∏)
5. **Properties**: "Area", "Domain", "Phase"

–í–ï–†–ù–ò –¢–û–õ–¨–ö–û JSON –≤ —Ç–µ–≥–∞—Ö <migration_model>...</migration_model>`;

// ============================================================
// [extractJSON, validateModel, generateWithRetry ‚Äî –ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô]
// ============================================================
function extractJSON(content) {
    const taggedMatch = content.match(/<migration_model>([\s\S]*?)<\/migration_model>/);
    if (taggedMatch) {
        let extracted = taggedMatch[1].trim();
        logConsole("‚úì Extracted JSON from <migration_model> tags");
        extracted = extracted.replace(/^```json\s*\n?/i, '').replace(/\n?```\s*$/i, '');
        return extracted;
    }
    
    let cleanContent = content.replace(/```json\s*\n?/gi, '').replace(/\n?```/g, '');
    const firstBrace = cleanContent.indexOf('{');
    const lastBrace = cleanContent.lastIndexOf('}');
    
    if (firstBrace !== -1 && lastBrace !== -1 && lastBrace > firstBrace) {
        logConsole("‚úì Extracted JSON by braces");
        return cleanContent.substring(firstBrace, lastBrace + 1);
    }
    
    logConsole("‚úó No JSON found in response");
    return null;
}

function validateModel(jsonObject) {
    if (!jsonObject.areas) {
        logConsole("‚úó Missing 'areas' structure");
        return false;
    }
    
    let totalElements = 0;
    
    for (let areaName in jsonObject.areas) {
        const area = jsonObject.areas[areaName];
        
        if (!area.business || !area.application || !area.technology || !area.migration) {
            logConsole(`‚úó Area "${areaName}" missing layers (need 4: business/application/technology/migration)`);
            return false;
        }
        
        const businessCount = area.business.nodes ? area.business.nodes.length : 0;
        const appCount = area.application.nodes ? area.application.nodes.length : 0;
        const techCount = area.technology.nodes ? area.technology.nodes.length : 0;
        const migrationCount = area.migration.nodes ? area.migration.nodes.length : 0;
        const areaTotal = businessCount + appCount + techCount + migrationCount;
        
        logConsole(`  Area "${areaName}": Business=${businessCount}, App=${appCount}, Tech=${techCount}, Migration=${migrationCount}, Total=${areaTotal}`);
        
        totalElements += areaTotal;
    }
    
    logConsole(`  TOTAL ELEMENTS: ${totalElements}`);
    
    if (totalElements < 40 || totalElements > 60) {
        logConsole(`‚ö† Expected ~50 elements (40-60), got ${totalElements}`);
    }
    
    return true;
}

function generateWithRetry() {
    for (let attempt = 1; attempt <= MAX_RETRIES; attempt++) {
        logConsole(`\n>>> Attempt ${attempt}/${MAX_RETRIES}`);
        
        try {
            logConsole("‚Üí Calling Anthropic API...");
            const content = callAnthropicAPI(MIGRATION_INTEGRATED_PROMPT);
            logConsole(`‚Üê Response received: ${content.length} chars`);
            
            const extractedJSON = extractJSON(content);
            if (!extractedJSON) {
                logConsole("‚úó No JSON found, retrying...");
                if (attempt < MAX_RETRIES) continue;
                throw new Error("No JSON found after " + MAX_RETRIES + " attempts");
            }
            
            const jsonObject = JSON.parse(extractedJSON);
            
            if (!validateModel(jsonObject)) {
                logConsole("‚úó Validation failed, retrying...");
                if (attempt < MAX_RETRIES) continue;
            }
            
            logConsole(`‚úì Validated successfully`);
            return jsonObject;
            
        } catch (error) {
            logConsole(`‚úó Attempt ${attempt} failed: ${error.message}`);
            if (attempt >= MAX_RETRIES) {
                throw error;
            }
        }
    }
}

// ============================================================
// –°–û–ó–î–ê–ù–ò–ï –≠–õ–ï–ú–ï–ù–¢–ê –ò –°–í–Ø–ó–ò
// ============================================================
function createElement(targetModel, node) {
    try {
        const element = targetModel.createElement(node.type, node.name);
        
        if (node.description) {
            element.documentation = node.description;
        }
        
        if (node.properties) {
            for (let key in node.properties) {
                element.prop(key, String(node.properties[key]));
            }
        }
        
        return element;
    } catch (e) {
        logConsole(`‚ö† Failed to create ${node.type}, using grouping: ${e.message}`);
        const element = targetModel.createElement('grouping', node.name);
        if (node.description) element.documentation = node.description;
        if (node.properties) {
            for (let key in node.properties) {
                element.prop(key, String(node.properties[key]));
            }
        }
        return element;
    }
}

function createRelationship(targetModel, source, target, relType, name) {
    const validTypes = [
        'association-relationship',
        'assignment-relationship',
        'realization-relationship',
        'serving-relationship',
        'access-relationship',
        'flow-relationship',
        'triggering-relationship'
    ];
    
    const type = validTypes.includes(relType) ? relType : 'association-relationship';
    
    try {
        return targetModel.createRelationship(type, name || '', source, target);
    } catch (e) {
        return targetModel.createRelationship('association-relationship', name || '', source, target);
    }
}

// ============================================================
// –°–û–ó–î–ê–ù–ò–ï 4-–°–õ–û–ô–ù–û–ô VIEW
// ============================================================
function createIntegratedView(targetModel, modelJson) {
    const viewName = "Implementation & Migration Integrated ‚Äî Fitness Club";
    const view = targetModel.createArchimateView(viewName);
    
    view.documentation = `üîÑ Implementation & Migration Integrated View (4 —Å–ª–æ—è)\n\n` +
                        `${modelJson.description || ''}\n\n` +
                        `–í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ —Å–ª–æ—ë–≤:\n` +
                        `1. Business Layer (#FFFFB3)\n` +
                        `2. Application Layer (#C0FFFF)\n` +
                        `3. Technology Layer (#D6EEC3)\n` +
                        `4. Implementation & Migration Layer (#FFE4B5, #E0FFE0, #F0F0F0, #FFD0D0)\n\n` +
                        `3 –¥–æ–º–µ–Ω–∞ (–≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ): –ó–∞–ø–∏—Å—å | –•—Ä–∞–Ω–µ–Ω–∏–µ | –û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å\n\n` +
                        `ArchiMate 3.2, Implementation & Migration Viewpoint`;
    
    view.prop("viewpoint", "implementation_migration");
    
    const elementMap = {};
    const visualMap = {};
    
    const areas = ['–ó–∞–ø–∏—Å—å', '–•—Ä–∞–Ω–µ–Ω–∏–µ', '–û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å'];
    const layers = ['business', 'application', 'technology', 'migration']; // 4 —Å–ª–æ—è!
    
    // –†–∞–∑–º–µ—â–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: –¥–æ–º–µ–Ω—ã –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ, —Å–ª–æ–∏ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ
    for (let areaIdx = 0; areaIdx < areas.length; areaIdx++) {
        const areaName = areas[areaIdx];
        const areaData = modelJson.areas[areaName];
        
        if (!areaData) {
            logConsole(`‚ö† Area "${areaName}" not found in model`);
            continue;
        }
        
        const baseX = LAYOUT_CONFIG.MARGIN_LEFT + areaIdx * (LAYOUT_CONFIG.AREA_WIDTH + LAYOUT_CONFIG.AREA_GAP);
        
        // Grouping –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –æ–±–ª–∞—Å—Ç–∏
        const areaGrouping = targetModel.createElement('grouping', `üìä ${areaName}`);
        areaGrouping.prop("Area", areaName);
        
        const totalHeight = LAYOUT_CONFIG.LAYER_HEIGHT * 4 + LAYOUT_CONFIG.LAYER_GAP * 3 + 40;
        const areaVisual = view.add(areaGrouping, baseX, LAYOUT_CONFIG.MARGIN_TOP, LAYOUT_CONFIG.AREA_WIDTH, totalHeight);
        areaVisual.fillColor = "#F5F5F5";
        areaVisual.opacity = 20;
        
        // –†–∞–∑–º–µ—â–µ–Ω–∏–µ 4 —Å–ª–æ—ë–≤ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ
        for (let layerIdx = 0; layerIdx < layers.length; layerIdx++) {
            const layerName = layers[layerIdx];
            const layerData = areaData[layerName];
            
            if (!layerData || !layerData.nodes) {
                continue;
            }
            
            const layerY = LAYOUT_CONFIG.MARGIN_TOP + 30 + layerIdx * (LAYOUT_CONFIG.LAYER_HEIGHT + LAYOUT_CONFIG.LAYER_GAP);
            
            // Grouping –¥–ª—è —Å–ª–æ—è
            let layerLabel = layerName === 'business' ? 'üìä Business' : 
                            layerName === 'application' ? 'üíª Application' : 
                            layerName === 'technology' ? 'üñ•Ô∏è Technology' :
                            'üîÑ Migration'; // 4-–π —Å–ª–æ–π!
            
            const layerGrouping = targetModel.createElement('grouping', `${layerLabel} ‚Äî ${areaName}`);
            layerGrouping.prop("Area", areaName);
            layerGrouping.prop("Domain", layerName);
            
            const layerColor = layerName === 'business' ? '#FFFFB3' :
                             layerName === 'application' ? '#C0FFFF' :
                             layerName === 'technology' ? '#D6EEC3' :
                             '#FFE4B5'; // Migration
            
            const layerVisual = view.add(layerGrouping, baseX + 10, layerY, LAYOUT_CONFIG.AREA_WIDTH - 20, LAYOUT_CONFIG.LAYER_HEIGHT);
            layerVisual.fillColor = layerColor;
            layerVisual.opacity = 15;
            
            // –†–∞–∑–º–µ—â–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ª–æ—è
            let elementX = baseX + 30;
            let elementY = layerY + 35;
            let col = 0;
            
            for (let i = 0; i < layerData.nodes.length; i++) {
                const node = layerData.nodes[i];
                
                try {
                    const element = createElement(targetModel, node);
                    elementMap[node.id] = element;
                    
                    const visualObj = view.add(element, elementX, elementY, LAYOUT_CONFIG.ELEMENT_WIDTH, LAYOUT_CONFIG.ELEMENT_HEIGHT);
                    visualMap[node.id] = visualObj;
                    visualObj.fillColor = LAYER_COLORS[node.type] || layerColor;
                    
                    col++;
                    if (col >= LAYOUT_CONFIG.ELEMENTS_PER_ROW) {
                        col = 0;
                        elementX = baseX + 30;
                        elementY += LAYOUT_CONFIG.ELEMENT_HEIGHT + 10;
                    } else {
                        elementX += LAYOUT_CONFIG.ELEMENT_WIDTH + 20;
                    }
                    
                } catch (e) {
                    logConsole(`‚úó Failed to create element ${node.id}: ${e.message}`);
                }
            }
            
            // –°–≤—è–∑–∏ –≤–Ω—É—Ç—Ä–∏ —Å–ª–æ—è
            if (layerData.relationships) {
                for (let i = 0; i < layerData.relationships.length; i++) {
                    const rel = layerData.relationships[i];
                    try {
                        const sourceElement = elementMap[rel.source];
                        const targetElement = elementMap[rel.target];
                        const sourceVisual = visualMap[rel.source];
                        const targetVisual = visualMap[rel.target];
                        
                        if (sourceElement && targetElement && sourceVisual && targetVisual) {
                            const relationship = createRelationship(targetModel, sourceElement, targetElement, rel.type, rel.name || '');
                            view.add(relationship, sourceVisual, targetVisual);
                        }
                    } catch (e) {
                        // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º
                    }
                }
            }
        }
    }
    
    // –°–≤—è–∑–∏ –º–µ–∂–¥—É –æ–±–ª–∞—Å—Ç—è–º–∏
    logConsole(`\n  Creating cross-area relationships...`);
    let crossRels = 0;
    
    if (modelJson.cross_area_relationships) {
        for (let i = 0; i < modelJson.cross_area_relationships.length; i++) {
            const rel = modelJson.cross_area_relationships[i];
            try {
                const sourceElement = elementMap[rel.source];
                const targetElement = elementMap[rel.target];
                const sourceVisual = visualMap[rel.source];
                const targetVisual = visualMap[rel.target];
                
                if (sourceElement && targetElement && sourceVisual && targetVisual) {
                    const relationship = createRelationship(targetModel, sourceElement, targetElement, rel.type, rel.name || '');
                    view.add(relationship, sourceVisual, targetVisual);
                    crossRels++;
                }
            } catch (e) {
                // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º
            }
        }
    }
    
    logConsole(`‚úì Created ${Object.keys(elementMap).length} elements`);
    logConsole(`‚úì Created ${crossRels} cross-area relationships`);
    
    return view;
}

// ============================================================
// –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø
// ============================================================
function main() {
    try {
        logConsole('\n========================================');
        logConsole('=== Migration Integrated View v8.0 ===');
        logConsole('========================================');
        
        const targetModel = getTargetModel();
        
        logConsole('\n=== Generating 4-Layer Integrated Migration View ===');
        
        const modelJson = generateWithRetry();
        
        if (!modelJson || !modelJson.areas) {
            throw new Error("Invalid JSON structure");
        }
        
        createIntegratedView(targetModel, modelJson);
        
        let totalElements = 0;
        for (let areaName in modelJson.areas) {
            const area = modelJson.areas[areaName];
            totalElements += (area.business.nodes ? area.business.nodes.length : 0);
            totalElements += (area.application.nodes ? area.application.nodes.length : 0);
            totalElements += (area.technology.nodes ? area.technology.nodes.length : 0);
            totalElements += (area.migration.nodes ? area.migration.nodes.length : 0); // +Migration!
        }
        
        logConsole('\n=== SUCCESS ===');
        logConsole(`‚úÖ Migration Integrated View (4 —Å–ª–æ—è) —Å–æ–∑–¥–∞–Ω!`);
        logConsole(`  –í—Å–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: ${totalElements}`);
        logConsole(`  –°–ª–æ–∏: Business ‚Üí Application ‚Üí Technology ‚Üí Migration`);
        logConsole(`  –î–æ–º–µ–Ω—ã: –ó–∞–ø–∏—Å—å | –•—Ä–∞–Ω–µ–Ω–∏–µ | –û—Ç—á—ë—Ç–Ω–æ—Å—Ç—å`);
        logConsole(`\nüìå –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤ Archi: Views ‚Üí "Implementation & Migration Integrated ‚Äî Fitness Club"`);
        
    } catch (error) {
        logConsole(`\n‚úó CRITICAL ERROR: ${error.message}`);
        if (error.stack) {
            console.log(error.stack);
        }
        throw error;
    }
}

// ============================================================
// –ó–ê–ü–£–°–ö
// ============================================================
try {
    main();
} catch (error) {
    logConsole(`\n‚úó‚úó‚úó FATAL ERROR ‚úó‚úó‚úó`);
    logConsole(`${error.message}`);
}